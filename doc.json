{
  "info": {
    "title": "Reader API",
    "version": "1.0.0",
    "description": ""
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "tags": [
          "general"
        ],
        "description": "GET /",
        "produces": [
          {
            "text/html": null
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation that the api is running",
            "content": {
              "text/html": {
                "properties": {
                  "running": {
                    "type": "string",
                    "enum": [
                      "true"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity-{id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "description": "GET /activity-:id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the activity"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "An Activity object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/activity"
                }
              }
            }
          },
          "403": {
            "description": "Access to activity {id} disallowed"
          },
          "404": {
            "description": "No Activity with ID {id}"
          }
        }
      }
    },
    "/reader-:id/file-upload-pub": {
      "post": {
        "tags": [
          "publications"
        ],
        "description": "POST /reader-:id/file-upload-pub",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the id of the publication"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "binary"
                  },
                  "documentPath": {
                    "type": "string"
                  },
                  "mediaType": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string",
                    "description": "stringified json data"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "file created"
          },
          "400": {
            "description": "No file was included with upload OR Error connecting to google bucket"
          },
          "403": {
            "description": "Access to publication {id} disallowed"
          }
        }
      }
    },
    "/reader-{id}/file-upload": {
      "post": {
        "tags": [
          "readers"
        ],
        "description": "POST /reader-:id/file-upload",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the id of the reader"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "file created"
          },
          "400": {
            "description": "No file was included with upload OR Error connecting to google bucket"
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No reader with ID {id}"
          }
        }
      }
    },
    "/job-{id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "description": "GET /job-:id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the id of the job"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A Job Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/job"
                }
              }
            }
          },
          "404": {
            "description": "No Job with ID {id}"
          }
        }
      }
    },
    "/note-{id}": {
      "get": {
        "tags": [
          "notes"
        ],
        "description": "GET /note-:id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the note"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A Note Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/note"
                }
              }
            }
          },
          "403": {
            "description": "Access to note {id} disallowed"
          },
          "404": {
            "description": "No Note with ID {id}"
          }
        }
      }
    },
    "/reader-{id}/activity": {
      "get": {
        "tags": [
          "readers"
        ],
        "description": "GET /reader-:readerId/activity",
        "parameters": [
          {
            "in": "path",
            "name": "readerId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the id of the reader"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "An outbox with the activity objects for a reader",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/outbox"
                }
              }
            }
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No Reader with ID {id}"
          }
        }
      },
      "post": {
        "tags": [
          "readers"
        ],
        "description": "POST /reader-:id/activity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/outbox-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully completed the activity"
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No Reader / Publication / Note with ID {id}"
          }
        }
      }
    },
    "/publication-{id}/{path}": {
      "get": {
        "tags": [
          "publications"
        ],
        "description": "GET /publication-:id/:path",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the publication"
          },
          {
            "in": "path",
            "name": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the relative path to the document within the publication"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "302": "redirected to document",
          "403": "Access to publication {id} disallowed",
          "404": "Publication or Document not found"
        }
      }
    },
    "/publication-{id}/file-upload": {
      "post": {
        "tags": [
          "publications"
        ],
        "description": "POST /publication-:id/file-upload",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the id of the publication"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "binary"
                  },
                  "documentPath": {
                    "type": "string"
                  },
                  "mediaType": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string",
                    "description": "stringified json data"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "file created"
          },
          "400": {
            "description": "No file was included with upload OR Error connecting to google bucket"
          },
          "403": {
            "description": "Access to publication {id} disallowed"
          },
          "404": {
            "description": "No publication with ID {id}"
          }
        }
      }
    },
    "/publication-{id}": {
      "get": {
        "tags": [
          "publications"
        ],
        "description": "GET /publication-:id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the publication"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The publication objects, with a list of document references (document object without the content field)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/publication"
                }
              }
            }
          },
          "403": {
            "description": "Access to publication {id} disallowed"
          },
          "404": {
            "description": "No Publication with ID {id}"
          }
        }
      }
    },
    "/reader-{id}/library": {
      "get": {
        "tags": [
          "readers"
        ],
        "description": "GET /reader-:id/library",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the reader"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 10,
              "maximum": 100
            },
            "description": "the number of library items to return"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "attribution",
            "schema": {
              "type": "string"
            },
            "description": "a search in the attribution field. Will also return partial matches."
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": [
                "author",
                "editor"
              ]
            },
            "description": "a modifier for attribution to specify the type of attribution"
          },
          {
            "in": "query",
            "name": "author",
            "schema": {
              "type": "string"
            },
            "description": "will return only exact matches."
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "datePublished"
              ]
            },
            "description": "used to order either alphabetically by title or by date published (most recent first)"
          },
          {
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            },
            "description": "a modifier to use with orderBy to reverse the order"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of publications for the reader",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/library"
                }
              }
            }
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No Reader with ID {id}"
          }
        }
      }
    },
    "/reader-{id}/notes": {
      "get": {
        "tags": [
          "readers"
        ],
        "description": "GET /reader-:id/notes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the reader"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 10,
              "maximum": 100
            },
            "description": "the number of library items to return"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "document",
            "schema": {
              "type": "string"
            },
            "description": "the url of the document the note is associated with. When this filter is used, will not paginate. Will return all results."
          },
          {
            "in": "query",
            "name": "publication",
            "schema": {
              "type": "string"
            },
            "description": "the id of the publication the note is associated with"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "the type of note"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "keyword to search for in the content of notes. Not case sensitive."
          },
          {
            "in": "query",
            "name": "stack",
            "schema": {
              "type": "string"
            },
            "description": "the collection (tag with type 'reader:Stack')"
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated"
              ]
            },
            "description": "the property to be used to order the notes. By default will return most recent first."
          },
          {
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            },
            "description": "modifier for the orderBy query to return the oldest notes first."
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of notes for the reader",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/notes"
                }
              }
            }
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No Reader with ID {id}"
          }
        }
      }
    },
    "/reader-{id}": {
      "get": {
        "tags": [
          "readers"
        ],
        "description": "GET /reader-:id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the id of the reader"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A reader object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/reader"
                }
              }
            }
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No Reader with ID {id}"
          }
        }
      }
    },
    "/readers": {
      "post": {
        "tags": [
          "readers"
        ],
        "description": "POST /readers",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/readers-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Reader already exists"
          }
        }
      }
    },
    "/reader-{id}/search": {
      "get": {
        "tags": [
          "readers"
        ],
        "description": "GET /reader-:id/search",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the short id of the reader"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "the string to search against"
          },
          {
            "in": "query",
            "name": "exact",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false"
            }
          },
          {
            "in": "query",
            "name": "publication",
            "schema": {
              "type": "string"
            },
            "description": "the id of the publication to search. Should not be used with a collection filter."
          },
          {
            "in": "query",
            "name": "collection",
            "schema": {
              "type": "string"
            },
            "description": "the name of the collection. Should not be used with a publication filter."
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/search-results"
                }
              }
            }
          },
          "403": {
            "description": "Access to reader {id} disallowed"
          },
          "404": {
            "description": "No Reader with ID {id}"
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "tags": [
          "readers"
        ],
        "description": "GET /whoami",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The reader object for the reader currently logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/reader"
                }
              }
            }
          },
          "404": {
            "description": "No Reader with ID {shortId}"
          }
        }
      }
    }
  },
  "definitions": {
    "activity": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "@context": {
          "type": "array"
        },
        "type": {
          "type": "string",
          "enum": [
            "Create",
            "Add",
            "Remove",
            "Delete",
            "Update"
          ]
        },
        "object": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Publication",
                "Note'",
                "reader:Tag"
              ]
            },
            "id": {
              "type": "string",
              "format": "url"
            }
          }
        },
        "target": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Publication",
                "Note'",
                "reader:Tag"
              ]
            },
            "id": {
              "type": "string",
              "format": "url"
            }
          }
        },
        "actor": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Person"
              ]
            },
            "id": {
              "type": "string",
              "format": "url"
            }
          }
        },
        "json": {
          "type": "object"
        },
        "readerId": {
          "type": "string",
          "format": "url"
        },
        "reader": {
          "$ref": "#/definitions/reader"
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "published": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "job": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "epub"
          ]
        },
        "published": {
          "type": "string",
          "format": "date-time"
        },
        "finished": {
          "type": "string",
          "format": "date-time"
        },
        "error": {
          "type": "string"
        },
        "publicationId": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "enum": [
            302,
            304,
            500
          ]
        }
      }
    },
    "note": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Note"
          ]
        },
        "noteType": {
          "type": "string"
        },
        "oa:hasSelector": {
          "type": "object"
        },
        "content": {
          "type": "string"
        },
        "@context": {
          "type": "array"
        },
        "published": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "inReplyTo": {
          "type": "string",
          "format": "url",
          "description": "The url of the document"
        },
        "context": {
          "type": "string",
          "format": "url",
          "description": "The url of the publication"
        },
        "json": {
          "type": "object"
        }
      }
    },
    "outbox": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "OrderedCollection"
          ]
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "@context": {
          "type": "array"
        },
        "totalItems": {
          "type": "integer"
        },
        "orderedItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/activity"
          }
        }
      }
    },
    "outbox-request": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Create",
            "Add",
            "Remove",
            "Delete",
            "Update",
            "Read"
          ],
          "required": true
        },
        "object": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Publication",
                "Note",
                "reader:Tag"
              ]
            }
          },
          "additionalProperties": true
        },
        "target": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Publication",
                "Note",
                "reader:Tag"
              ]
            }
          },
          "additionalProperties": true
        },
        "json": {
          "type": "object"
        },
        "@context": {
          "type": "array",
          "required": true
        }
      }
    },
    "annotation": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Person",
            "Organization"
          ]
        }
      }
    },
    "link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "hreflang": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "publication": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Publication"
          ]
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "@context": {
          "type": "array"
        },
        "author": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/annotation"
          }
        },
        "editor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/annotation"
          }
        },
        "replies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "url"
          }
        },
        "description": {
          "type": "string"
        },
        "datePublished": {
          "type": "string",
          "format": "timestamp"
        },
        "readingOrder": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "position": {
          "type": "object"
        },
        "json": {
          "type": "object"
        },
        "readerId": {
          "type": "string",
          "format": "url"
        },
        "reader": {
          "$ref": "#/definitions/reader"
        },
        "published": {
          "type": "string",
          "format": "timestamp"
        },
        "updated": {
          "type": "string",
          "format": "timestamp"
        }
      }
    },
    "publication-ref": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Publication"
          ]
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "@context": {
          "type": "array"
        },
        "author": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/annotation"
          }
        },
        "editor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/annotation"
          }
        },
        "replies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "url"
          }
        },
        "json": {
          "type": "object"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "description": {
          "type": "string"
        },
        "datePublished": {
          "type": "string",
          "format": "timestamp"
        },
        "readerId": {
          "type": "string",
          "format": "url"
        },
        "published": {
          "type": "string",
          "format": "timestamp"
        },
        "updated": {
          "type": "string",
          "format": "timestamp"
        }
      }
    },
    "tag": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "reader:Tag"
          ]
        },
        "name": {
          "type": "string"
        },
        "tagType": {
          "type": "string"
        },
        "published": {
          "type": "string",
          "format": "timestamp"
        },
        "updated": {
          "type": "string",
          "format": "timestamp"
        }
      }
    },
    "library": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Collection"
          ]
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "@context": {
          "type": "array"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tag"
          }
        },
        "totalItems": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/publication-ref"
          }
        }
      }
    },
    "noteWithPub": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Note"
          ]
        },
        "noteType": {
          "type": "string"
        },
        "oa:hasSelector": {
          "type": "object"
        },
        "content": {
          "type": "string"
        },
        "@context": {
          "type": "array"
        },
        "published": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "publication": {
          "properties": {
            "id": {
              "type": "string",
              "format": "url"
            },
            "author": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/annotation"
              }
            },
            "editor": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/annotation"
              }
            },
            "description": {
              "type": "string"
            },
            "datePublished": {
              "type": "string",
              "format": "timestamp"
            }
          }
        },
        "inReplyTo": {
          "type": "string",
          "format": "url",
          "description": "The url of the document"
        },
        "context": {
          "type": "string",
          "format": "url",
          "description": "The url of the publication"
        },
        "json": {
          "type": "object"
        }
      }
    },
    "notes": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Collection"
          ]
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "@context": {
          "type": "array"
        },
        "totalItems": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/noteWithPub"
          }
        }
      }
    },
    "reader": {
      "properties": {
        "id": {
          "type": "string",
          "format": "url"
        },
        "type": {
          "type": "string",
          "enum": [
            "Person"
          ]
        },
        "summaryMap": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            }
          }
        },
        "@context": {
          "type": "array"
        },
        "inbox": {
          "type": "string",
          "format": "url"
        },
        "outbox": {
          "type": "string",
          "format": "url"
        },
        "name": {
          "type": "string"
        },
        "profile": {
          "type": "object"
        },
        "preferences": {
          "type": "object"
        },
        "json": {
          "type": "object"
        },
        "published": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "readers-request": {
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "@context": {
          "type": "array",
          "required": true
        },
        "profile": {
          "type": "object"
        },
        "preferences": {
          "type": "object,"
        },
        "json": {
          "type": "object"
        }
      }
    },
    "search-result": {
      "properties": {
        "id": {
          "type": "string"
        },
        "documentId": {
          "type": "string"
        },
        "documentUrl": {
          "type": "string",
          "format": "url"
        },
        "@context": {
          "type": "array"
        },
        "highlights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "search-results": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/search-result"
          }
        }
      }
    }
  },
  "tags": []
}